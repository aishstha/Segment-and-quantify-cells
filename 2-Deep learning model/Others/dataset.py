# -*- coding: utf-8 -*-
"""Dataset.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NhFWNTH7xmEi6FXTdgkqfQ54hW3jQ39p
"""

from google.colab import drive
drive.mount('/content/drive')

!pip install tensorflow==2.8.1

import tensorflow as tf
print(tf.__version__)

import os
os.environ['CUDA_VISIBLE_DEVICES'] = '0'

import cv2
import glob
import random
import numpy as np
from PIL import Image
from keras.utils.np_utils import normalize
import tensorflow as tf
import segmentation_models as sm
import albumentations as A

# to resolve AttributeError: module 'keras.utils' has no attribute 'get_file' using segmentation_models error
sm.set_framework('tf.keras')
sm.framework()

# Commented out IPython magic to ensure Python compatibility.
import keras
import matplotlib.pyplot as plt
# %matplotlib inline
import tensorflow as tf
from logging import LogRecord
from sklearn.model_selection import KFold
import numpy as np
from tensorflow.keras.optimizers import Adam
# from model_binary import CNetSeg
from sklearn.model_selection import train_test_split
import albumentations as A
from tensorflow.keras.utils import Sequence
import tensorflow.keras.backend as K
from tensorflow.keras.callbacks import ReduceLROnPlateau, ModelCheckpoint
from sklearn.metrics import accuracy_score, precision_score, recall_score, confusion_matrix
import shutil
import pandas as pd
from datetime import datetime

main_path = '/content/drive/MyDrive/cell-data/'
image_path = main_path + 'my-data-547/image'
label_path = main_path + 'my-data-547/mask'

image_files = sorted(glob.glob(image_path + '/*.tif'))
label_files = sorted(glob.glob(label_path + '/*.tif'))

# First, split into train and a temporary set (val + test)
train_image_files, temp_image_files, train_label_files, temp_label_files = train_test_split(
    image_files, label_files, test_size=0.2, random_state=42)

# Now, split the temporary set into validation and test sets
val_image_files, test_image_files, val_label_files, test_label_files = train_test_split(
    temp_image_files, temp_label_files, test_size=0.5, random_state=42)

print(f"Train size: {len(train_image_files)} ___ {len(train_label_files)}")
print(f"Valid size: {len(test_image_files)} ___ {len(test_label_files)}")
print(f"Test size: {len(val_image_files)} ___ {len(val_label_files)}")
print(f"Train shape: {train_image_files}")